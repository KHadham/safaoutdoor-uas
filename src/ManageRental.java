/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author khadamikhwan
 */
import java.awt.HeadlessException;
import utility.KoneksiDB;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utility.Helper;

public class ManageRental extends javax.swing.JFrame {

    public Statement st;
    public ResultSet rs;
    Connection konek = KoneksiDB.BuatKoneksi();
    private DefaultTableModel tabmode;
    private DefaultTableModel tabmodeItem;

    Helper helper = new Helper();

    /**
     * Creates new form ManageRental
     */
    public ManageRental() {
        initComponents();
        datatable();
        fetchCustomerSelction();
        fetchItems();
        btn_edit.setEnabled(false);
        btn_delete.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        btn_keluar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_batal = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_days = new javax.swing.JTextField();
        clear_nama_barang = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        selectionCustomer = new javax.swing.JComboBox<>();
        add_customer = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txt_length = new javax.swing.JTextField();
        clear_nama_barang1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        selectionBarang = new javax.swing.JComboBox<>();
        txt_quantity = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        selectionStatus = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelItem = new javax.swing.JTable();
        add_items = new javax.swing.JButton();
        selectionSize = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_total = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo-safa-long.png"))); // NOI18N

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Rental", "Pelanggan", "Tanggal sewa", "Lama sewa", "Total ", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel.getTableHeader().setReorderingAllowed(false);
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);
        if (tabel.getColumnModel().getColumnCount() > 0) {
            tabel.getColumnModel().getColumn(0).setResizable(false);
            tabel.getColumnModel().getColumn(1).setResizable(false);
            tabel.getColumnModel().getColumn(2).setResizable(false);
            tabel.getColumnModel().getColumn(2).setHeaderValue("Tanggal sewa");
            tabel.getColumnModel().getColumn(3).setHeaderValue("Lama sewa");
            tabel.getColumnModel().getColumn(4).setHeaderValue("Total ");
            tabel.getColumnModel().getColumn(5).setHeaderValue("Status");
        }

        btn_keluar.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn_keluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/back.png"))); // NOI18N
        btn_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keluarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setText("Management Rental");

        btn_add.setText("Tambah Data");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_edit.setText("Edit Data");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_delete.setText("Hapus Data");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_batal.setText("Batal");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        jLabel8.setText("Tanggal Rental");

        txt_days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_daysActionPerformed(evt);
            }
        });

        clear_nama_barang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/x.png"))); // NOI18N
        clear_nama_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_nama_barangActionPerformed(evt);
            }
        });

        jLabel9.setText("Pelanggan");

        selectionCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionCustomerActionPerformed(evt);
            }
        });

        add_customer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/plus+.png"))); // NOI18N
        add_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_customerActionPerformed(evt);
            }
        });

        jLabel10.setText("Lama Rental (Hari)");

        txt_length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lengthActionPerformed(evt);
            }
        });

        clear_nama_barang1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/x.png"))); // NOI18N
        clear_nama_barang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_nama_barang1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Barang");

        selectionBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionBarangActionPerformed(evt);
            }
        });

        jLabel12.setText("Jumlah");

        jLabel13.setText("Status");

        selectionStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Booking", "Ongoing", "Done" }));
        selectionStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionStatusActionPerformed(evt);
            }
        });

        tabelItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama barang", "Quantity", "Ukuran", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelItem.getTableHeader().setReorderingAllowed(false);
        tabelItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelItemMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelItem);
        if (tabelItem.getColumnModel().getColumnCount() > 0) {
            tabelItem.getColumnModel().getColumn(0).setResizable(false);
            tabelItem.getColumnModel().getColumn(1).setResizable(false);
            tabelItem.getColumnModel().getColumn(2).setResizable(false);
        }

        add_items.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/plus+.png"))); // NOI18N
        add_items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_itemsActionPerformed(evt);
            }
        });

        selectionSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionSizeActionPerformed(evt);
            }
        });

        jLabel14.setText("Ukuran");

        jLabel3.setText("Total: ");

        txt_total.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_keluar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_batal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(selectionBarang, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel14)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addComponent(selectionSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txt_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel12))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(add_items, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(6, 6, 6)
                                                    .addComponent(jLabel2))
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel9)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(selectionCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(add_customer))
                                                .addComponent(jLabel8)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txt_days, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(clear_nama_barang))
                                                .addComponent(jLabel10)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txt_length, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(clear_nama_barang1))
                                                .addComponent(selectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel13)))))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txt_total)))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(add_customer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectionCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clear_nama_barang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_days, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clear_nama_barang1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_length, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectionBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(add_items))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(selectionSize))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 82, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_total))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_keluar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void datatable() {
        Object[] Baris = {"ID Rental", "Nama Customer", "Tanggal Sewa", "Lama sewa", "Total Harga", "Status"};
        tabmode = new DefaultTableModel(null, Baris);
        try {

            String query = "SELECT\n"
                    + "    r.id_rental,\n"
                    + "    c.nama_depan,\n"
                    + "    c.nama_belakang,\n"
                    + "    r.created_at,\n"
                    + "    r.rental_days,\n"
                    + "    r.total_price,\n"
                    + "    r.status \n"
                    + "FROM\n"
                    + "    rentals r\n"
                    + "JOIN\n"
                    + "    customers c ON c.id_customer = r.id_customer\n";

            Statement stat = konek.createStatement();
            ResultSet hasil = stat.executeQuery(query);

            while (hasil.next()) {
                tabmode.addRow(new Object[]{
                    "RTL_" + hasil.getString(1),
                    hasil.getString(2) + " " + hasil.getString(3),
                    hasil.getString(4),
                    hasil.getString(5),
                    hasil.getString(6),
                    hasil.getString(7),});
            }

            tabel.setModel(tabmode);
        } catch (Exception e) {
            System.out.println("erorr: " + e);
        }
    }

    protected void datatable2(String id) {
        System.out.println("parameter datatable2" + id);

        Object[] Baris = {"Nama barang", "quantity", "ukuran", "harga item"};
        tabmodeItem = new DefaultTableModel(null, Baris);
        try {

            String query = "SELECT\n"
                    + "    eq.equipment_name,\n"
                    + "    ir.quantity,\n"
                    + "    sz.size_label,\n"
                    + "    ir.price\n"
                    + "FROM\n"
                    + "    item_rentals ir\n"
                    + "JOIN\n"
                    + "    equipment eq ON eq.id_equipment = ir.id_equipment\n"
                    + "JOIN\n"
                    + "    size sz ON ir.id_size = sz.id_size\n" // Added newline at the end
                    + "WHERE ir.id_rental = ?";  // Fixed placement of WHERE clause

            PreparedStatement stat = konek.prepareStatement(query);

            stat.setString(1, id);

            ResultSet hasil = stat.executeQuery();

            while (hasil.next()) {

                System.out.println("erorr:xxx " + hasil.getString(1));
                tabmodeItem.addRow(new Object[]{
                    hasil.getString(1),
                    hasil.getString(2),
                    hasil.getString(3),
                    hasil.getString(4),});
            }
            tabelItem.setModel(tabmodeItem);
        } catch (Exception e) {
            System.out.println("erorr:datatable2 " + e);
        }
    }

    protected void fetchCustomerSelction() {
        try {
            Statement stat = konek.createStatement();
            ResultSet hasil = stat.executeQuery("SELECT * FROM customers");

            while (hasil.next()) {
                selectionCustomer.addItem("CST_" + hasil.getString("id_customer") + ": " + hasil.getString("nama_depan") + " " + hasil.getString("nama_belakang"));
            }
        } catch (Exception e) {
            System.out.println("erorr: fetchKategoriSelction" + e);
        }
    }

    protected void fetchItems() {
        try {
            Statement stat = konek.createStatement();
            ResultSet hasil = stat.executeQuery("SELECT * FROM equipment");

            while (hasil.next()) {
                selectionBarang.addItem("BRG_" + hasil.getString("id_equipment") + ": " + "KTG_" + hasil.getString("id_category") + ": " + hasil.getString("equipment_name") + " RP: " + hasil.getString("price"));
            }
        } catch (Exception e) {
            System.out.println("erorr: fetchKategoriSelction" + e);
        }
    }

    protected void fetchSizeSelection(String category) {
        System.out.println("category: " + category);
        PreparedStatement stat = null;
        ResultSet hasil = null;
        try {
            String query = "SELECT * FROM size WHERE id_category = ?";
            stat = konek.prepareStatement(query);
            stat.setString(1, category);
            hasil = stat.executeQuery();
            selectionSize.removeAllItems(); // Clear existing items
            while (hasil.next()) {
                selectionSize.addItem("SZ_" + hasil.getString("id_size") + ": " + hasil.getString("size_label"));
            }
            System.out.println("hasil: " + hasil.getString("size_label"));
            // Force refresh of the selectionSize JComboBox
            selectionSize.revalidate();
            selectionSize.repaint();
        } catch (SQLException e) {
            System.out.println("Error fetching size selection: " + e.getMessage());
            // You might want to display an error message to the user here
        } finally {
            // Close the ResultSet and PreparedStatement
            if (hasil != null) {
                try {
                    hasil.close();
                } catch (SQLException e) {
                    System.out.println("Error closing ResultSet: " + e.getMessage());
                }
            }
            if (stat != null) {
                try {
                    stat.close();
                } catch (SQLException e) {
                    System.out.println("Error closing PreparedStatement: " + e.getMessage());
                }
            }
        }
    }

    private void btn_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keluarActionPerformed
        MainScreen equipmentScreen = new MainScreen();
        equipmentScreen.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_keluarActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        if (txt_days.getText().equals("") || txt_length.getText().equals("") || txt_total.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data harus di isi semua", "error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                // Step 1: Insert data into the Rent table
                int total = Integer.parseInt(txt_total.getText().trim());
                int length = Integer.parseInt(txt_length.getText().trim());
                int multipliedTotal = total * length;

                String sqlRent = "INSERT INTO rentals values (?, ?, ?, ?, ?,?)";
                PreparedStatement statRent = konek.prepareStatement(sqlRent, Statement.RETURN_GENERATED_KEYS);
                statRent.setString(1, null);
                statRent.setString(2, selectionCustomer.getSelectedItem().toString().split(":")[0].trim().replaceAll("[^0-9]", "")); // Assuming customerId is provided
                statRent.setString(3, txt_days.getText()); // Assuming createdAt is the current timestamp
                statRent.setString(4, txt_length.getText()); // Assuming totalPrice is provided
                statRent.setInt(5, multipliedTotal); // Assuming totalPrice is provided
                statRent.setString(6, selectionStatus.getSelectedItem().toString()); // Initial status

                int affectedRows = statRent.executeUpdate();

                if (affectedRows == 0) {
                    throw new SQLException("Creating rent failed, no rows affected.");
                }

                try ( ResultSet generatedKeys = statRent.getGeneratedKeys()) {
                    if (generatedKeys.next()) {
                        String rentId = generatedKeys.getString(1);

                        // Step 2: Insert data into the Rent_Items table using the generated rentId
                        String sqlRentItems = "INSERT INTO item_rentals  VALUES (?, ?, ?,?,?,?)";
                        PreparedStatement statRentItems = konek.prepareStatement(sqlRentItems);

                        DefaultTableModel model = (DefaultTableModel) tabelItem.getModel();
                        int rowCount = model.getRowCount();

                        for (int i = 0; i < rowCount; i++) {
                            String itemId = model.getValueAt(i, 0).toString(); // Assuming itemId is in the first column
                            String quantity = model.getValueAt(i, 1).toString(); // Assuming quantity is in the second column
                            String size = model.getValueAt(i, 2).toString();
                            String price = model.getValueAt(i, 3).toString(); // Assuming size is in the third column

                            System.out.println("itemId: " + itemId);
                            System.out.println("quantity: " + quantity);
                            System.out.println("size: " + size);

                            statRentItems.setString(1, itemId.split(":")[0].replaceAll("[^0-9]", ""));
                            statRentItems.setString(2, quantity);
                            statRentItems.setString(3, rentId);
                            statRentItems.setString(4, null);
                            statRentItems.setString(5, size.split(":")[0].replaceAll("[^0-9]", ""));
                            statRentItems.setString(6, price);
                            statRentItems.addBatch();
                        }

                        statRentItems.executeBatch();

                        JOptionPane.showMessageDialog(null, "Berhasil tambah data", "success", JOptionPane.INFORMATION_MESSAGE);
                        datatable();
                        Clear();
                    } else {
                        throw new SQLException("Creating rent failed, no ID obtained.");
                    }
                } catch (Exception e) {
                    System.out.println("Error: 111" + e);
                    JOptionPane.showMessageDialog(null, "Gagal tambah data", "error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println("Error: 222" + e);
                JOptionPane.showMessageDialog(null, "Gagal tambah data", "error", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_btn_addActionPerformed

    private void txt_daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_daysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_daysActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        int selectedRow = tabel.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        System.out.println("selectedRow " + selectedRow);

        int ok = JOptionPane.showConfirmDialog(null, "yakin hapus data ini?", "konfirmasi dialog", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {

            try {
                String selectedId = tabel.getValueAt(selectedRow, 0).toString().substring(4);
                String sql = "delete from rentals where id_rental ='" + selectedId + "'";
                PreparedStatement stat = konek.prepareStatement(sql);
                stat.executeUpdate();
                JOptionPane.showMessageDialog(null, "Berhasil menghapus " + tabel.getValueAt(selectedRow, 0).toString() + tabel.getValueAt(selectedRow, 1).toString(), "success", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e, "error", JOptionPane.INFORMATION_MESSAGE);
            }
            datatable();
            Clear();

        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void clear_nama_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_nama_barangActionPerformed
        // TODO add your handling code here:
        txt_days.setText("");
    }//GEN-LAST:event_clear_nama_barangActionPerformed

    private void selectionCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionCustomerActionPerformed
        // TODO add your handling code here:
        String selectedCategory = selectionCustomer.getSelectedItem().toString().split(":")[0];
        System.out.println("selectionKategoriActionPerformed " + selectedCategory.replaceAll("[^0-9]", ""));
    }//GEN-LAST:event_selectionCustomerActionPerformed

    private void add_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_customerActionPerformed
        // TODO add your handling code here:
        ManageCustomer ManageCustomer = new ManageCustomer();
        ManageCustomer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_add_customerActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        Clear();         // TODO add your handling code here:
    }//GEN-LAST:event_btn_batalActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        int selectedRow = tabel.getSelectedRow();
        if (selectedRow != -1) {
//            System.out.println("tabelMouseClicked" + tabel.getValueAt(selectedRow, 0).toString());
            System.out.println("status " + tabel.getValueAt(selectedRow, 5).toString());
            datatable2(tabel.getValueAt(selectedRow, 0).toString().replaceAll("[^0-9]", ""));

            btn_add.setEnabled(false);
            btn_batal.setEnabled(true);
            btn_edit.setEnabled(true);
            btn_delete.setEnabled(true);

            selectionCustomer.setSelectedIndex(helper.updateComboBoxSelection(selectionCustomer, tabel.getValueAt(selectedRow, 1).toString()));
            txt_days.setText(tabel.getValueAt(selectedRow, 2).toString());
            txt_length.setText(tabel.getValueAt(selectedRow, 3).toString());
            txt_total.setText(tabel.getValueAt(selectedRow, 4).toString());
            selectionStatus.setSelectedIndex(helper.updateComboBoxSelection(selectionStatus, tabel.getValueAt(selectedRow, 5).toString()));
        }
    }//GEN-LAST:event_tabelMouseClicked

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        try {
            int selectedRow = tabel.getSelectedRow();
            String idBarang = tabel.getValueAt(selectedRow, 0).toString().substring(4);
            // Construct the SQL update query
            String sql = "UPDATE rentals SET status = ? WHERE `rentals`.`id_rental` = ?";

            PreparedStatement stat = konek.prepareStatement(sql);
            stat.setString(1, selectionStatus.getSelectedItem().toString());
            stat.setString(2, idBarang);

            // Execute the update query
            int rowsAffected = stat.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Berhasil update data", "success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal update data", "error", JOptionPane.ERROR_MESSAGE);
            }
            datatable();
            Clear();
        } catch (Exception e) {
            System.out.print(e);
            JOptionPane.showMessageDialog(null, "Error update data", "error", JOptionPane.ERROR_MESSAGE);
        }           // TODO add your handling code here:
    }//GEN-LAST:event_btn_editActionPerformed

    private void txt_lengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lengthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lengthActionPerformed

    private void clear_nama_barang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_nama_barang1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_nama_barang1ActionPerformed

    private void selectionBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionBarangActionPerformed
        String selectedCategory = selectionBarang.getSelectedItem().toString().split(":")[1];
        fetchSizeSelection(selectedCategory.replaceAll("[^0-9]", ""));

    }//GEN-LAST:event_selectionBarangActionPerformed

    private void selectionStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectionStatusActionPerformed

    private void tabelItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelItemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelItemMouseClicked

    private void add_itemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_itemsActionPerformed
        if (tabmodeItem == null) {
            Object[] Barisx = {"Nama barang", "Quantity", "Ukuran", "Harga"};
            tabmodeItem = new DefaultTableModel(null, Barisx);
            tabelItem.setModel(tabmodeItem);
        }

        int quantity = Integer.parseInt(txt_quantity.getText().trim());

        // Extract and parse the price from the selected item string
        int price = Integer.parseInt(selectionBarang.getSelectedItem().toString().split(":")[3].trim());

        // Calculate the total cost
        int totalCost = quantity * price;

        tabmodeItem.addRow(new Object[]{
            selectionBarang.getSelectedItem().toString(),
            txt_quantity.getText(),
            selectionSize.getSelectedItem().toString(),
            totalCost,});

        int currentTotal = Integer.parseInt(txt_total.getText().trim());
        int newTotal = totalCost + currentTotal;
        txt_total.setText(Integer.toString(newTotal));
        btn_delete.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_batal.setEnabled(true);
    }//GEN-LAST:event_add_itemsActionPerformed

    private void selectionSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionSizeActionPerformed

    }//GEN-LAST:event_selectionSizeActionPerformed

    private void Clear() {
        if (tabmodeItem != null) {
            tabmodeItem.setRowCount(0); // Removes all rows from the table
        }
        txt_total.setText("0");
        txt_days.setText("");
        btn_add.setEnabled(true);
        btn_batal.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_delete.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageRental().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_customer;
    private javax.swing.JButton add_items;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_batal;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_keluar;
    private javax.swing.JButton clear_nama_barang;
    private javax.swing.JButton clear_nama_barang1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> selectionBarang;
    private javax.swing.JComboBox<String> selectionCustomer;
    private javax.swing.JComboBox<String> selectionSize;
    private javax.swing.JComboBox<String> selectionStatus;
    private javax.swing.JTable tabel;
    private javax.swing.JTable tabelItem;
    private javax.swing.JTextField txt_days;
    private javax.swing.JTextField txt_length;
    private javax.swing.JTextField txt_quantity;
    private javax.swing.JLabel txt_total;
    // End of variables declaration//GEN-END:variables
}
